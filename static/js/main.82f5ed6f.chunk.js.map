{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","App","useState","visibleGoods","setVisibleGoods","isReversed","setIsReversed","isSortAlphabeticallyActive","setIsSortAlphabeticallyActive","isSortByLengthActive","setIsSortByLengthActive","isGoodsNotInOriginalOrder","join","className","type","onClick","sortedGoods","sort","reverse","good1","good2","length","map","good","ReactDOM","render","document","getElementById"],"mappings":"iOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,MAAwCC,mBAASF,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EACEJ,oBAAS,GADX,mBAAOK,EAAP,KAAmCC,EAAnC,KAEA,EAAwDN,oBAAS,GAAjE,mBAAOO,EAAP,KAA6BC,EAA7B,KAEMC,EACJR,EAAaS,SAAWZ,EAAgBY,OAsC1C,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBN,EAA6B,GAAK,YAC/DQ,QA1CmB,WACzB,IAAMC,EAAc,YAAIb,GAAcc,OAEtCb,EAAgBG,EACZS,EAAYE,UACZF,GACJV,GAAc,GACdE,GAA+BD,GAC/BG,GAAwB,IA+BpB,iCAQA,wBACEI,KAAK,SACLD,UAAS,4BAAuBJ,EAAuB,GAAK,YAC5DM,QAvCa,WACnB,IAAMC,EAAc,YAAIb,GAAcc,MACpC,SAACE,EAAOC,GAAR,OAAkBD,EAAME,OAASD,EAAMC,UAGzCjB,EAAgBC,EAAaW,EAAYE,UAAYF,GACrDV,GAAc,GACdE,GAA8B,GAC9BE,GAAyBD,IA4BrB,4BAQA,wBACEK,KAAK,SACLD,UAAS,4BAAuBR,EAAa,GAAK,YAClDU,QApCa,WACnBX,EAAgB,YAAID,GAAce,WAClCZ,GAAeD,GACfG,GAA8B,GAC9BE,GAAwB,IA6BpB,qBAQCC,GACC,wBACEG,KAAK,SACLD,UAAU,4BACVE,QAtCS,WACjBX,EAAgBJ,GAChBM,GAAc,GACdE,GAA8B,GAC9BE,GAAwB,IA+BlB,sBAUJ,6BACGP,EAAamB,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCpGnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.82f5ed6f.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const [visibleGoods, setVisibleGoods] = useState(goodsFromServer);\n  const [isReversed, setIsReversed] = useState(false);\n  const [isSortAlphabeticallyActive, setIsSortAlphabeticallyActive]\n  = useState(false);\n  const [isSortByLengthActive, setIsSortByLengthActive] = useState(false);\n\n  const isGoodsNotInOriginalOrder\n  = visibleGoods.join() !== goodsFromServer.join();\n\n  const sortAlphabetically = () => {\n    const sortedGoods = [...visibleGoods].sort();\n\n    setVisibleGoods(isSortAlphabeticallyActive\n      ? sortedGoods.reverse()\n      : sortedGoods);\n    setIsReversed(false);\n    setIsSortAlphabeticallyActive(!isSortAlphabeticallyActive);\n    setIsSortByLengthActive(false);\n  };\n\n  const sortByLength = () => {\n    const sortedGoods = [...visibleGoods].sort(\n      (good1, good2) => good1.length - good2.length,\n    );\n\n    setVisibleGoods(isReversed ? sortedGoods.reverse() : sortedGoods);\n    setIsReversed(false);\n    setIsSortAlphabeticallyActive(false);\n    setIsSortByLengthActive(!isSortByLengthActive);\n  };\n\n  const reverseGoods = () => {\n    setVisibleGoods([...visibleGoods].reverse());\n    setIsReversed(!isReversed);\n    setIsSortAlphabeticallyActive(false);\n    setIsSortByLengthActive(false);\n  };\n\n  const resetGoods = () => {\n    setVisibleGoods(goodsFromServer);\n    setIsReversed(false);\n    setIsSortAlphabeticallyActive(false);\n    setIsSortByLengthActive(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${isSortAlphabeticallyActive ? '' : 'is-light'}`}\n          onClick={sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${isSortByLengthActive ? '' : 'is-light'}`}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${isReversed ? '' : 'is-light'}`}\n          onClick={reverseGoods}\n        >\n          Reverse\n        </button>\n\n        {isGoodsNotInOriginalOrder && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetGoods}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}