{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","App","useState","visibleGoods","setVisibleGoods","isReversed","setIsReversed","className","type","onClick","sortedGoods","sort","reverse","good1","good2","length","join","map","good","ReactDOM","render","document","getElementById"],"mappings":"iOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,MAAwCC,mBAASF,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KA4BA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBF,EAAa,GAAK,YAC/CI,QAhCmB,WACzB,IAAMC,EAAc,YAAIP,GAAcQ,OAEtCP,EAAgBC,EAAaK,EAAYE,UAAYF,GACrDJ,GAAc,IAyBV,iCAQA,wBACEE,KAAK,SACLD,UAAS,4BAAuBF,EAAa,GAAK,YAClDI,QAjCa,WACnB,IAAMC,EAAc,YAAIP,GAAcQ,MACpC,SAACE,EAAOC,GAAR,OAAkBD,EAAME,OAASD,EAAMC,UAGzCX,EAAgBC,EAAaK,EAAYE,UAAYF,GACrDJ,GAAc,IAwBV,4BAQA,wBACEE,KAAK,SACLD,UAAS,4BAAuBF,EAAa,GAAK,YAClDI,QAhCa,WACnBL,EAAgB,YAAID,GAAcS,WAClCN,GAAeD,IA2BX,qBAQCF,EAAaa,SAAWhB,EAAgBgB,QACvC,wBACER,KAAK,SACLD,UAAU,4BACVE,QApCS,WACjBL,EAAgBJ,GAChBM,GAAc,IA+BR,sBAUJ,6BACGH,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,aCrFbC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d9b49f0b.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const [visibleGoods, setVisibleGoods] = useState(goodsFromServer);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const sortAlphabetically = () => {\n    const sortedGoods = [...visibleGoods].sort();\n\n    setVisibleGoods(isReversed ? sortedGoods.reverse() : sortedGoods);\n    setIsReversed(false);\n  };\n\n  const sortByLength = () => {\n    const sortedGoods = [...visibleGoods].sort(\n      (good1, good2) => good1.length - good2.length,\n    );\n\n    setVisibleGoods(isReversed ? sortedGoods.reverse() : sortedGoods);\n    setIsReversed(false);\n  };\n\n  const reverseGoods = () => {\n    setVisibleGoods([...visibleGoods].reverse());\n    setIsReversed(!isReversed);\n  };\n\n  const resetGoods = () => {\n    setVisibleGoods(goodsFromServer);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${isReversed ? '' : 'is-light'}`}\n          onClick={sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${isReversed ? '' : 'is-light'}`}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${isReversed ? '' : 'is-light'}`}\n          onClick={reverseGoods}\n        >\n          Reverse\n        </button>\n\n        {visibleGoods.join() !== goodsFromServer.join() && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetGoods}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}