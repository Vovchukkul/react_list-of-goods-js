{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","App","useState","visibleGoods","setVisibleGoods","isSortAlphabeticallyActive","setIsSortAlphabeticallyActive","isSortByLengthActive","setIsSortByLengthActive","isReverseActive","setIsReverseActive","shouldRenderResetButton","className","type","classNames","onClick","sortedGoods","sort","newVisibleGoods","reverse","good1","good2","length","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,MAAwCC,mBAASF,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EACEF,oBAAS,GADX,mBAAOG,EAAP,KAAmCC,EAAnC,KAEA,EAAwDJ,oBAAS,GAAjE,mBAAOK,EAAP,KAA6BC,EAA7B,KACA,EAA8CN,oBAAS,GAAvD,mBAAOO,EAAP,KAAwBC,EAAxB,KAyCMC,EACJN,GAA8BE,GAAwBE,EAExD,OACE,sBAAKG,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CACtC,YAAaT,IAEfU,QAlDmB,WACzB,IAAMC,EAAc,YAAIb,GAAcc,OAChCC,EAAkBT,EACpBO,EAAYG,UACZH,EAEJZ,EAAgBc,GAChBZ,GAA8B,GAC9BE,GAAwB,IAqCpB,iCAUA,wBACEK,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,YAAaP,IAEfQ,QAjDa,WACnB,IAAMC,EAAc,YAAIb,GAAcc,MACpC,SAACG,EAAOC,GAAR,OAAkBD,EAAME,OAASD,EAAMC,UAEnCJ,EAAkBT,EACpBO,EAAYG,UACZH,EAEJZ,EAAgBc,GAChBZ,GAA8B,GAC9BE,GAAwB,IAkCpB,4BAUA,wBACEK,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,YAAaL,IAEfM,QA9Ca,WACnBL,GAAoBD,GAEpB,IAAMS,EAAkB,YAAIf,GAAcgB,UAE1Cf,EAAgBc,IAoCZ,qBAUCP,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QA/CS,WACjBX,EAAgBJ,GAChBM,GAA8B,GAC9BE,GAAwB,GACxBE,GAAmB,IAwCb,sBAUJ,6BACGP,EAAaoB,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YC9GnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e752bb7c.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const [visibleGoods, setVisibleGoods] = useState(goodsFromServer);\n  const [isSortAlphabeticallyActive, setIsSortAlphabeticallyActive]\n  = useState(false);\n  const [isSortByLengthActive, setIsSortByLengthActive] = useState(false);\n  const [isReverseActive, setIsReverseActive] = useState(false);\n\n  const sortAlphabetically = () => {\n    const sortedGoods = [...visibleGoods].sort();\n    const newVisibleGoods = isReverseActive\n      ? sortedGoods.reverse()\n      : sortedGoods;\n\n    setVisibleGoods(newVisibleGoods);\n    setIsSortAlphabeticallyActive(true);\n    setIsSortByLengthActive(false);\n  };\n\n  const sortByLength = () => {\n    const sortedGoods = [...visibleGoods].sort(\n      (good1, good2) => good1.length - good2.length,\n    );\n    const newVisibleGoods = isReverseActive\n      ? sortedGoods.reverse()\n      : sortedGoods;\n\n    setVisibleGoods(newVisibleGoods);\n    setIsSortAlphabeticallyActive(false);\n    setIsSortByLengthActive(true);\n  };\n\n  const reverseGoods = () => {\n    setIsReverseActive(!isReverseActive);\n\n    const newVisibleGoods = [...visibleGoods].reverse();\n\n    setVisibleGoods(newVisibleGoods);\n  };\n\n  const resetGoods = () => {\n    setVisibleGoods(goodsFromServer);\n    setIsSortAlphabeticallyActive(false);\n    setIsSortByLengthActive(false);\n    setIsReverseActive(false);\n  };\n\n  const shouldRenderResetButton\n  = isSortAlphabeticallyActive || isSortByLengthActive || isReverseActive;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button is-info', {\n            'is-light': !isSortAlphabeticallyActive,\n          })}\n          onClick={sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-success', {\n            'is-light': !isSortByLengthActive,\n          })}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-warning', {\n            'is-light': !isReverseActive,\n          })}\n          onClick={reverseGoods}\n        >\n          Reverse\n        </button>\n\n        {shouldRenderResetButton && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetGoods}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}